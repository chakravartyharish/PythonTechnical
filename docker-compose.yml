#version: '3.8'
#
#services:
#  api:
#    container_name: technical-test-api
#    build:
#      context: .
#    restart: unless-stopped
#    command: >
#      sh -c "alembic upgrade head && uvicorn main:app --reload --host 0.0.0.0 --port 8000"
#    ports:
#      - 8000:8000
#    volumes:
#      - ./app:/app
#    env_file:
#      - .env
#    depends_on:
#      db:
#        condition: service_healthy
#
#  db:
#    image: postgres:16-alpine
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#    env_file:
#      - .env
#    healthcheck:
#      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
#      interval: 2s
#      timeout: 30s
#      retries: 10
#
#volumes:
#  postgres-data:


#version: '3.8'
#
#services:
#  api:
#    container_name: technical-test-api
#    build:
#      context: .
#    restart: unless-stopped
#    command: >
#      sh -c "PYTHONPATH=/app alembic upgrade head && PYTHONPATH=/app uvicorn main:app --reload --host 0.0.0.0 --port 8000"
#    ports:
#      - 8000:8000
#    volumes:
#      - ./app:/app
#    env_file:
#      - .env
#    environment:
#      - PYTHONPATH=/app
#    depends_on:
#      db:
#        condition: service_healthy
#
#  db:
#    image: postgres:16-alpine
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#    env_file:
#      - .env
#    healthcheck:
#      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
#      interval: 2s
#      timeout: 30s
#      retries: 10
#
#volumes:
#  postgres-data:


version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DB_URL=postgresql+asyncpg://user:password@db:5432/dbname

volumes:
  postgres_data:
